{
  "components": {
    "schemas": {
      "conversations.v1.conversation": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "chat_service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IS[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "friendly_name": {
            "type": "string"
          },
          "links": {
            "type": "object"
          },
          "messaging_service_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MG[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "conversations.v1.conversation.conversation_message": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "author": {
            "type": "string"
          },
          "body": {
            "type": "string"
          },
          "conversation_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "index": {
            "type": "integer"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^IM[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "conversations.v1.conversation.conversation_participant": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "conversation_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "identity": {
            "type": "string"
          },
          "messaging_binding": {
            "type": "object"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^MB[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "conversations.v1.conversation.conversation_scoped_webhook": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "configuration": {
            "type": "object"
          },
          "conversation_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^CH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "date_created": {
            "format": "date-time",
            "type": "string"
          },
          "date_updated": {
            "format": "date-time",
            "type": "string"
          },
          "sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^WH[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "target": {
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      },
      "conversations.v1.conversation_webhook": {
        "properties": {
          "account_sid": {
            "maxLength": 34,
            "minLength": 34,
            "pattern": "^AC[0-9a-fA-F]{32}$",
            "type": "string"
          },
          "filters": {
            "items": {
              "type": "string"
            },
            "type": "array"
          },
          "method": {
            "enum": [
              "GET",
              "POST"
            ],
            "type": "string"
          },
          "post_webhook_url": {
            "type": "string"
          },
          "pre_webhook_url": {
            "type": "string"
          },
          "target": {
            "enum": [
              "webhook",
              "flex"
            ],
            "type": "string"
          },
          "url": {
            "format": "uri",
            "type": "string"
          }
        },
        "type": "object"
      }
    },
    "securitySchemes": {
      "accountSid_authToken": {
        "scheme": "basic",
        "type": "http"
      }
    }
  },
  "info": {
    "contact": {
      "email": "support@twilio.com",
      "name": "Twilio Support",
      "url": "https://support.twilio.com"
    },
    "description": "This is the public Twilio REST API.",
    "license": {
      "name": "Apache 2.0",
      "url": "https://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "termsOfService": "https://www.twilio.com/legal/tos",
    "title": "Twilio REST API",
    "version": "81ff5a4"
  },
  "openapi": "3.0.1",
  "paths": {
    "/v1/Conversations": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "conversations": {
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the SMS Service this conversation belongs to.",
            "in": "query",
            "name": "MessagingServiceSid",
            "required": true,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The human-readable name of this conversation.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date that this resource was created.",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date that this resource was last updated.",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Conversations/Webhooks": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The HTTP method to be used when sending a webhook request.",
            "in": "query",
            "name": "Method",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The list of webhook event triggers that are enabled for this Service.",
            "in": "query",
            "name": "Filters",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The absolute url the pre-event webhook request should be sent to.",
            "in": "query",
            "name": "PreWebhookUrl",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The absolute url the post-event webhook request should be sent to.",
            "in": "query",
            "name": "PostWebhookUrl",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The routing target of the webhook.",
            "in": "query",
            "name": "Target",
            "required": false,
            "schema": {
              "enum": [
                "webhook",
                "flex"
              ],
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "target",
        "method",
        "pre_webhook_url",
        "post_webhook_url"
      ],
      "x-path-type": "instance"
    },
    "/v1/Conversations/{ConversationSid}/Messages": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for messages.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "messages": {
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message"
                      },
                      "type": "array"
                    },
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this message.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The channel specific identifier of the message's author.",
            "in": "query",
            "name": "Author",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The content of the message.",
            "in": "query",
            "name": "Body",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date that this resource was created.",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date that this resource was last updated.",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "index",
        "author",
        "date_created"
      ],
      "x-path-type": "list"
    },
    "/v1/Conversations/{ConversationSid}/Messages/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this message.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this message.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this message.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^IM[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The channel specific identifier of the message's author.",
            "in": "query",
            "name": "Author",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The content of the message.",
            "in": "query",
            "name": "Body",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date that this resource was created.",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date that this resource was last updated.",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_message"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "index",
        "author",
        "date_created"
      ],
      "x-path-type": "instance"
    },
    "/v1/Conversations/{ConversationSid}/Participants": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for participants.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "participants": {
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation.conversation_participant"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this participant.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A unique string identifier for the conversation participant as Chat User.",
            "in": "query",
            "name": "Identity",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of the participant's device.",
            "in": "query",
            "name": "MessagingBinding.address",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The address of the Twilio phone number that the participant is in contact with.",
            "in": "query",
            "name": "MessagingBinding.proxyAddress",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date that this resource was created.",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date that this resource was last updated.",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "messaging_binding"
      ],
      "x-path-type": "list"
    },
    "/v1/Conversations/{ConversationSid}/Participants/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this participant.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this participant.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this participant.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^MB[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The date that this resource was created.",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date that this resource was last updated.",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_participant"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "messaging_binding"
      ],
      "x-path-type": "instance"
    },
    "/v1/Conversations/{ConversationSid}/Webhooks": {
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this webhook.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "properties": {
                    "meta": {
                      "properties": {
                        "first_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "key": {
                          "type": "string"
                        },
                        "next_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "page": {
                          "type": "integer"
                        },
                        "page_size": {
                          "type": "integer"
                        },
                        "previous_page_url": {
                          "format": "uri",
                          "type": "string"
                        },
                        "url": {
                          "format": "uri",
                          "type": "string"
                        }
                      },
                      "type": "object"
                    },
                    "webhooks": {
                      "items": {
                        "$ref": "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                      },
                      "type": "array"
                    }
                  },
                  "type": "object"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this webhook.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The target of this webhook.",
            "in": "query",
            "name": "Target",
            "required": true,
            "schema": {
              "enum": [
                "webhook",
                "trigger",
                "studio"
              ],
              "type": "string"
            }
          },
          {
            "description": "The absolute url the webhook request should be sent to.",
            "in": "query",
            "name": "Configuration.url",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to be used when sending a webhook request.",
            "in": "query",
            "name": "Configuration.method",
            "required": false,
            "schema": {
              "enum": [
                "GET",
                "POST"
              ],
              "type": "string"
            }
          },
          {
            "description": "The list of events, firing webhook event for this Conversation.",
            "in": "query",
            "name": "Configuration.filters",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The list of keywords, firing webhook event for this Conversation.",
            "in": "query",
            "name": "Configuration.triggers",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The studio flow sid, where the webhook should be sent to.",
            "in": "query",
            "name": "Configuration.flowSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The message index for which and it's successors the webhook will be replayed.",
            "in": "query",
            "name": "Configuration.replayAfter",
            "required": false,
            "schema": {
              "type": "integer"
            }
          },
          {
            "description": "The flag whether buffering should be applied to messages.",
            "in": "query",
            "name": "Configuration.bufferMessages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The period of buffering messages.",
            "in": "query",
            "name": "Configuration.bufferWindow",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "201": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "target"
      ],
      "x-path-type": "list"
    },
    "/v1/Conversations/{ConversationSid}/Webhooks/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this webhook.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this webhook.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "The unique id of the Conversation for this webhook.",
            "in": "path",
            "name": "ConversationSid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^WH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The absolute url the webhook request should be sent to.",
            "in": "query",
            "name": "Configuration.url",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The HTTP method to be used when sending a webhook request.",
            "in": "query",
            "name": "Configuration.method",
            "required": false,
            "schema": {
              "enum": [
                "GET",
                "POST"
              ],
              "type": "string"
            }
          },
          {
            "description": "The list of events, firing webhook event for this Conversation.",
            "in": "query",
            "name": "Configuration.filters",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The list of keywords, firing webhook event for this Conversation.",
            "in": "query",
            "name": "Configuration.triggers",
            "required": false,
            "schema": {
              "items": {
                "type": "string"
              },
              "type": "array"
            }
          },
          {
            "description": "The studio flow sid, where the webhook should be sent to.",
            "in": "query",
            "name": "Configuration.flowSid",
            "required": false,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^FW[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The flag whether buffering should be applied to messages.",
            "in": "query",
            "name": "Configuration.bufferMessages",
            "required": false,
            "schema": {
              "type": "boolean"
            }
          },
          {
            "description": "The period of buffering messages.",
            "in": "query",
            "name": "Configuration.bufferWindow",
            "required": false,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation.conversation_scoped_webhook"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "target"
      ],
      "x-path-type": "instance"
    },
    "/v1/Conversations/{Sid}": {
      "delete": {
        "description": null,
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "The resource was deleted successfully."
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "description": "TODO: Resource-level docs",
      "get": {
        "description": null,
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "post": {
        "description": null,
        "parameters": [
          {
            "description": "A 34 character string that uniquely identifies this resource.",
            "in": "path",
            "name": "Sid",
            "required": true,
            "schema": {
              "maxLength": 34,
              "minLength": 34,
              "pattern": "^CH[0-9a-fA-F]{32}$",
              "type": "string"
            }
          },
          {
            "description": "The human-readable name of this conversation.",
            "in": "query",
            "name": "FriendlyName",
            "required": false,
            "schema": {
              "type": "string"
            }
          },
          {
            "description": "The date that this resource was created.",
            "in": "query",
            "name": "DateCreated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          },
          {
            "description": "The date that this resource was last updated.",
            "in": "query",
            "name": "DateUpdated",
            "required": false,
            "schema": {
              "format": "date-time",
              "type": "string"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/conversations.v1.conversation"
                }
              }
            }
          }
        },
        "security": [
          {
            "accountSid_authToken": []
          }
        ],
        "tags": [
          "Preview"
        ]
      },
      "servers": [
        {
          "url": "https://conversations.twilio.com"
        }
      ],
      "x-default-output-properties": [
        "sid",
        "friendly_name",
        "date_created"
      ],
      "x-path-type": "instance"
    }
  },
  "tags": [
    {
      "description": "PLEASE NOTE that this is a Preview product that is subject to change. Use it with caution. If you currently do not have developer preview access, please contact help@twilio.com.",
      "name": "Preview"
    }
  ]
}